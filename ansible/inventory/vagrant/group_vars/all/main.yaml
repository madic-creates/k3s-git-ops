---
# K3s Cluster Configuration
# This file contains all available variables for k3s cluster deployment

# =============================================================================
# Security Configuration
# =============================================================================

# K3s cluster token for node authentication
# Can be provided via vault_k3s_token or will be auto-generated
vault_k3s_token: VAGRANT
k3s_token: "{{ vault_k3s_token }}"

# =============================================================================
# Network Configuration
# =============================================================================

# K3s virtual IP (VIP) for HA cluster
# This IP is used by KubeVIP for load balancing and HA
k3s:
  network:
    vip: "192.168.33.9"
    #joinip: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
    joinip: "192.168.33.11"

# K3s version for k9s CLI tool
# See: https://github.com/derailed/k9s/releases
k9s_version: "v0.50.16"

# =============================================================================
# K3s Server Configuration
# =============================================================================

# K3s server configuration file content
# This is deployed to /etc/rancher/k3s/config.yaml on server nodes
K3S_SERVER_CONFIG:
  - name: config.yaml
    content: |
      # Write kubeconfig with read permissions for users
      write-kubeconfig-mode: "0644"

      # Disable default k3s components
      disable:
        - "servicelb"        # Use MetalLB or KubeVIP instead
        - "local-storage"    # Use Longhorn instead
        - "traefik"          # Deploy Traefik via ArgoCD

      # Bindings required for prometheus monitoring
      kube-controller-manager-arg:
        - "bind-address=0.0.0.0"
      kube-proxy-arg:
        - "metrics-bind-address=0.0.0.0"
      kube-scheduler-arg:
        - "bind-address=0.0.0.0"
      kubelet-arg:
        - "config=/etc/rancher/k3s/kubelet.config"

      # Expose etcd metrics for monitoring
      etcd-expose-metrics: true

      # TLS SANs for certificate validation
      # Add all server IPs and VIP
      tls-san:
        - "192.168.33.11"
        - "192.168.33.12"
        - "192.168.33.13"

      # Use systemd-resolved DNS
      resolv-conf: "/run/systemd/resolve/resolv.conf"

      # Enable embedded registry for caching images
      embedded-registry: true

      # Flannel backend (options: vxlan, host-gw, wireguard, wireguard-native, none)
      # Use 'none' if using Cilium as CNI
      flannel-backend: "wireguard-native"

      # Initialize cluster (required for first server node)
      cluster-init: true

# =============================================================================
# K3s Agent Configuration
# =============================================================================

# K3s agent configuration file content
# This is deployed to /etc/rancher/k3s/config.yaml on agent nodes
K3S_AGENT_CONFIG:
  - name: config.yaml
    content: |
      # Kubelet configuration
      kubelet-arg: "config=/etc/rancher/k3s/kubelet.config"

      # Use systemd-resolved DNS
      resolv-conf: "/run/systemd/resolve/resolv.conf"

# =============================================================================
# Container Registry Configuration
# =============================================================================

# Container registry mirrors and configurations
# This is deployed to /etc/rancher/k3s/registries.yaml
K3S_REGISTRIES:
  - name: registries.yaml
    content: |
      # Configure container registry mirrors to prevent rate limiting
      # Example: Local caching registry mirror for docker.io
      #mirrors:
      #  docker.io:
      #    endpoint:
      #      - "http://192.168.1.50:5000"
      #
      # Private registry authentication
      #configs:
      #  "registry.example.com":
      #    auth:
      #      username: "username"
      #      password: "password"

# =============================================================================
# Kubelet Configuration
# =============================================================================

# Kubelet configuration file content
# This is deployed to /etc/rancher/k3s/kubelet.config
K3S_KUBELET:
  - name: kubelet.config
    content: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration

      # Graceful node shutdown configuration
      # Enables kubelet to gracefully evict pods during node shutdown
      # See: https://kubernetes.io/blog/2021/04/21/graceful-node-shutdown-beta/
      shutdownGracePeriod: 30s
      shutdownGracePeriodCriticalPods: 10s

      # Additional kubelet settings can be added here:
      # - maxPods: 110
      # - podsPerCore: 0
      # - enableControllerAttachDetach: true
      # - imageGCHighThresholdPercent: 85
      # - imageGCLowThresholdPercent: 80
      # - evictionHard:
      #     memory.available: "100Mi"
      #     nodefs.available: "10%"
