fullnameOverride: argocd
dex:
    enabled: false
configs:
    params:
        server.insecure: true
    repositories:
        #argo-cd:
        #    type: helm
        #    name: argo-cd
        #    url: https://argoproj.github.io/argo-helm
        argo-cd:
            type: helm
            name: argo-cd
            url: ENC[AES256_GCM,data:6dRryUqiIjUYrY7DJPXmNGKHjmZZtivIsJyKY4DNpg/5X6ld,iv:2lU3+ZUlQzZaTP4FVh3QpqiHciCPjUjj8g2k1L2u+jk=,tag:mMp2xWN8QkOVHO9CBWpW/A==,type:str]
    credentialTemplates:
        # Git credentials
        #git-ops-dev:
        #  url: https://path.to/repository
        #  username: git@example.com
        #  password: OnlySecureWithExclamationMark!
        k3s-git-ops:
            url: ENC[AES256_GCM,data:w45tztZ7yy/VXFa+SBGpHsDmXak4h0/IUz8m083TycziNH7pHA==,iv:Vl+kfUwsvT/zfhPl/B2s8WRD7Xmad5OebRYNgVBhLEg=,tag:CBnyzFo2YyKkfMFBEWehYA==,type:str]
            username: ENC[AES256_GCM,data:HHQMH210,iv:LunriCoRvBo4YogfsJ9J6ZMvsuvnp66bm5ghSHU+zu0=,tag:/dl40f0C/aN8RmE4RSqatw==,type:str]
            password: ENC[AES256_GCM,data:eK6UjkpgmI6yhbruZYE6y+JCqB3uVsdIWtVsrOPLG8LWAuFlw3TJpZnMtCfjb+XfXsgbH1R9tDRnyGzwxjIVZhJCiBmjKOnvi8TxCdxPLil/9a6Ks49jx1cnk3At,iv:+0WmcNsb+4YGXynFCmfZKED67YuhynXJczkDKg61dC0=,tag:3PwLQlOZntMKpN8dkARvcA==,type:str]
    cm:
        admin.enabled: true
        kustomize.buildOptions: --enable-helm --enable-alpha-plugins --enable-exec
        url: ENC[AES256_GCM,data:dviDjBtbi4K6993hQpKNDKzNXeb/TI6uFQ59pbjITA==,iv:zq/AdbdTISfHI4uvDlD+OBcLDSGGEYdeTStMXW+x5+s=,tag:iMO4RLZhZjoWxAMOGLSRXg==,type:str]
        # Enable ArgoCD sync waves between apps in Kubernetes
        # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app
        resource.customizations.health.argoproj.io_Application: |
            hs = {}
            hs.status = "Progressing"
            hs.message = ""
            if obj.status ~= nil then
              if obj.status.health ~= nil then
                hs.status = obj.status.health.status
                if obj.status.health.message ~= nil then
                  hs.message = obj.status.health.message
                end
              end
            end
            return hs
        # Required to ignore caBundle Webhook Changes done by kube-prometheus stack
        resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
            jqPathExpressions:
            - '.webhooks[]?.clientConfig.caBundle'
        resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
            jqPathExpressions:
            - '.webhooks[]?.clientConfig.caBundle'
        # Prevent argocd from deleting custom cilium objects
        #resource.exclusions: |
        #    - apiGroups:
        #        - cilium.io
        #      kinds:
        #        - CiliumIdentity
        #      clusters:
        #        - "*"
        #oidc.config: |
        #  name: Authelia
        #  issuer: https://PUBLIC-AUTHELIA-URL
        #  clientID: argocd
        #  clientSecret: OIDC_CLIENT_SECRET
        #  cliClientID: argocd-cli
        #  requestedScopes:
        #    - openid
        #    - profile
        #    - groups
        #    - email
        oidc.config: ENC[AES256_GCM,data:wPR4KWP0yJfDzNPPXiA/pPFDovLHMTNvLCOxseYTBYWhOJoYHohWY2JaUvKYeMYAZNPcMBvCcw5gH3bVYuCBLQYIBdWwxK1/DEVGHJ47c7iS73WWOS16NOYrlGc3QDB8QYFjAK/kSWufLMJEeIt4+ufxUb5F0KlV284wrTvNLB4ZyQgfyylZICU438PW7fOE2v7NJqXQOORblxeeV93qps1SnWD5OtekODhmPLWZtYeh1pR7eJZYuof37hljzKtXB/LENiQIo1XaSmu+xLveYNUSZTYjyXx5kWsIgAVTVOZ4RG02P5AkXRL8,iv:JQeQpuysQyMJcNl8oPJkd5WIpzI5E2IoJn33Z4LhKOE=,tag:8rOgnKCaMp26eUwZYEPdYQ==,type:str]
    rbac:
        policy.csv: |
            p, role:org-admin, applications, *, */*, allow
            p, role:org-admin, clusters, get, *, allow
            p, role:org-admin, repositories, *, *, allow
            p, role:org-admin, logs, get, *, allow
            p, role:org-admin, exec, create, */*, allow
            g, argocd-org-admin, role:org-admin
    secret:
        # htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'
        argocdServerAdminPassword: ENC[AES256_GCM,data:UCfbUbFUzK3XSsXMdWB9mKMcDEygkOyZ8QjCaco/sWwDpUK+/Sr1zWbdD5H+gv1rrSO6iANcDmLA/kR1,iv:loFnCUSctQoB5zQRbgHVxHtdKkZJ+5PY47K87txq6iQ=,tag:ZDF/lIPVxANbqgzdzEyRbg==,type:str]
        argocdServerAdminPasswordMtime: "2024-05-13T08:32:44Z"
server:
    ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
            #cert-manager.io/cluster-issuer: netcup-issuer-staging
            #cert-manager.io/cluster-issuer: ca-issuer
            traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
        hostname: ENC[AES256_GCM,data:TTNZ75jA3OpF2GvteLfkouJq+FEaRE8=,iv:xomkwsyMxIx1l7P30WKskjf8AxAdVrb/3WaM1gt4ZUQ=,tag:WAbyDxK4fq+dNEi7Cz+m0Q==,type:str]
        extraTls:
            - hosts:
                - ENC[AES256_GCM,data:q3/5WP5HuEi3yvm2KDtv3CLHPAJ9SYw=,iv:VD3EFMWjPPObQdMK8EwwZAbIFZxU7TC8YjQjZ5EukmA=,tag:v2v6Nrg0xiqSumdnqVUCWw==,type:str]
              secretName: wildcard-cloudflare-production-01
repoServer:
    # Use init containers to configure custom tooling
    # https://argoproj.github.io/argo-cd/operator-manual/custom_tools/
    volumes:
        - name: custom-tools
          emptyDir: {}
        - name: sops-age
          secret:
            secretName: sops-age
        - name: cmp-tmp
          emptyDir: {}
        - name: cmp-sops-plugin
          configMap:
            name: argocd-cmp-sops-plugin
    initContainers:
        - name: install-ksops
          # https://github.com/viaduct-ai/kustomize-sops/releases
          image: viaductoss/ksops:v4.3.2
          command:
            - /bin/sh
            - -c
          args:
            - echo "Installing KSOPS..."; cp ksops /custom-tools/; cp kustomize /custom-tools/; echo "Done.";
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
        - name: install-sops
          # https://github.com/getsops/sops/pkgs/container/sops/versions?filters%5Bversion_type%5D=tagged
          image: ghcr.io/getsops/sops:v3.9.3-alpine
          command:
            - /bin/sh
            - -c
          args:
            - echo "Installing SOPS..."; cp /usr/local/bin/sops /custom-tools/; echo "Done.";
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
        - name: install-helm
          # https://hub.docker.com/r/alpine/helm/tags
          image: alpine/helm:3.16.4
          command:
            - /bin/sh
            - -c
          args:
            - echo "Installing helm..."; cp /usr/bin/helm /custom-tools/; echo "Done.";
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
        - name: install-kustomize
          image: alpine:3.21
          command:
            - /bin/sh
            - -c
          args:
            - wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.5.0/kustomize_v5.5.0_linux_amd64.tar.gz | tar -xvzf - && mv kustomize /custom-tools/
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
    extraContainers:
        - name: cmp-sops-plugin
          command:
            - /var/run/argocd/argocd-cmp-server
          # https://hub.docker.com/_/alpine/tags
          image: alpine:3.20.3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              subPath: plugin.yaml
              name: cmp-sops-plugin
            # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps mitigate path traversal attacks.
            - mountPath: /tmp
              name: cmp-tmp
            - mountPath: /usr/local/bin/kustomize
              name: custom-tools
              subPath: kustomize
            - mountPath: /usr/local/bin/ksops
              name: custom-tools
              subPath: ksops
            - mountPath: /usr/local/bin/sops
              name: custom-tools
              subPath: sops
            - mountPath: /usr/local/bin/helm
              name: custom-tools
              subPath: helm
            - mountPath: /.config/sops/age
              name: sops-age
              readOnly: true
    volumeMounts:
        # ksops packages it's own kustomize binary with ksops integration and overrides the argocd kustomize binary
        - mountPath: /usr/local/bin/kustomize
          name: custom-tools
          subPath: kustomize
        - mountPath: /usr/local/bin/ksops
          name: custom-tools
          subPath: ksops
        - mountPath: /usr/local/bin/sops
          name: custom-tools
          subPath: sops
        - mountPath: /.config/sops/age
          name: sops-age
          readOnly: true
    env:
        - name: SOPS_AGE_KEY_FILE
          value: /.config/sops/age/keys.txt
# The application controller needs limits because it quickly gets out of control when checking the configured resources.
controller:
    resources:
        limits:
            cpu: 1024m
            memory: 1024Mi
        requests:
            cpu: 250m
            memory: 256Mi
    affinity:
        podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - emby
                  topologyKey: kubernetes.io/hostname
sops:
    age:
        - recipient: age1d2g7tgqpfvxulsusn3m608h60h2hne7yqwv5nh5nd24z6h0hgq0skjkhw8
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBPRGhsUU4vQ0hhbDBXb0JB
            MjdpNkI5NmptbmdBcXpyS0NnbDg0WkkwWWlVCjdaekhkd2FUQ3FPLzA3UlRJWG1v
            TG9NUk5EZ2Z4ZzVYMHAybHR4S2syZm8KLS0tIElETTk2Z05DbFVDZVJJMk1MT0JD
            NUs3YjZOYVliSVAxM1l4OGNDT29LbW8KONXhdNgyVfPGOFjYvqj3YogSGEqb0QSU
            GmI8Zjd8tClLI6O8nuKpGdk4E2dZuSlHOCjH6SnY09KXjfX8GostYg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1q522xtgjrmvr43w7um5rh02ta3yfns635680hz4m7uhw0nfqj5zqgxnz27
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBQU1dzM093VW9FelRGK050
            ODhOY3NKUEVnM2ppTlNuWVBVNW81eHZkVFRVCmNoT2pJV25DdFZyQUhvbUNsc1JI
            Y0pxZHlGOU1Pc3pqTWpNWHpIZk5TdmcKLS0tIE02a1lURVgvYm05Q0lIYmNsL054
            L2t5dlRacStCT2N4bS8zL05BTy96T3cKKaK40f//18ZUfcGgFyBfWEYyCgFmDMqL
            HFXq29OGNw27Mgy02YxY+yimrVAzyIE/g7CMldnJj6FjfgJKiFy/5g==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-07-27T14:43:25Z"
    mac: ENC[AES256_GCM,data:H0EoQ9FsGpDtbIloNZ8WTAWjWKIHZrZBXfftlOFcUHaL7tXGnIKXSK326F03lD0P3h+DrKjkpG+gmJkV67BDUP+ihHtKTnx3/mWiy4B5y76bI86t0iUYfjCxea/7uNWldSw7jLSSO15LLFynkIrMzyGGkBSmquWJzPhTCe5FRso=,iv:+3MGcZnoiflJsKxKYVWa38pxRN1jGm2i69ijBZKV228=,tag:1y9gfEVd/nm1e3GfqPR8JA==,type:str]
    encrypted_regex: ^(data|stringData|email|dnsNames|.*(H|h)osts?|hostname|username|password|url|issuer|argocdServerAdminPassword|oidc.config|commonName|literals|.*awsAccessKeyId|.*awsSecretAccessKey|.*defaultAdminPassword|apiToken|accountId|rootPassword|replicationPassword|adminPassword|root_url|client_secret|auth_url|api_url|PIHOLE_DOMAIN|TUNNEL_DNS_UPSTREAM|customDnsEntries|securityTokenKey|emailRecipients|.*provider_url|.*redirect_url|.*accesskeyEncryption|SEMAPHORE_WEB_ROOT|token|cookieEncryption|cookieHash)$
    version: 3.10.2
