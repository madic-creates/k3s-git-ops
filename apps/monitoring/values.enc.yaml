prometheusOperator:
    revisionHistoryLimit: 2
alertmanager:
    enabled: true
    ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: web239,websecure239
            traefik.ingress.kubernetes.io/router.tls: "true"
            traefik.ingress.kubernetes.io/router.middlewares: authelia-forwardauth-authelia@kubernetescrd
        hosts:
            - ENC[AES256_GCM,data:cU5DpLCozjyVdGTG57SBzCtKmPdfwmNTJ8dcC9pHmXM+LA==,iv:Ha0V5A1wBVR0pAjUMdPSCfFZnnjw1XZw0gGBCc/xx14=,tag:RL9mbullgQtdumdPUVnwtw==,type:str]
        tls:
            - secretName: wildcard-cloudflare-production-02
              hosts:
                - ENC[AES256_GCM,data:7gFQNJZKbEofwC8Zg11vHwsev6Wrko9HrQgY5odCXPTBIA==,iv:O6f6gtlAUXSbVr6lt1wwA2PCGnxFw9b1QjlMKl5HXWs=,tag:p/t2ITPAB1OyV6l+qur31g==,type:str]
    alertmanagerSpec:
        # PVC configuration
        storage:
            volumeClaimTemplate:
                spec:
                    storageClassName: longhorn
                    accessModes:
                        - ReadWriteOnce
                    resources:
                        requests:
                            storage: 1Gi
    config:
        global:
            resolve_timeout: 5m
        inhibit_rules:
            - source_matchers:
                - severity = critical
              target_matchers:
                - severity =~ warning|info
              equal:
                - namespace
                - alertname
            - source_matchers:
                - severity = warning
              target_matchers:
                - severity = info
              equal:
                - namespace
                - alertname
            - source_matchers:
                - alertname = InfoInhibitor
              target_matchers:
                - severity = info
              equal:
                - namespace
            - target_matchers:
                - alertname = InfoInhibitor
        route:
            group_by:
                - namespace
            group_wait: 30s
            group_interval: 5m
            repeat_interval: 1h
            receiver: ntfy
            routes:
                - receiver: ntfy
                  repeat_interval: 6h
                  matchers:
                    - alertname = "Watchdog"
        receivers:
            - name: ntfy
              webhook_configs:
                - url: ENC[AES256_GCM,data:wbLugDkN2be8Q9Dyk0DeK5IAG2Y+euUu7GONXLOpja5jZzzVaZYYqZwCF+Y2XUZqeboimtNbTGh2IA==,iv:AwkMxGeq2LCpwidWtZagmu0vXY5qtvC7IFN7WZX3Kfw=,tag:ScsZ/uloAhOK8bq4RwfQdA==,type:str]
                  http_config:
                    basic_auth:
                        username: ENC[AES256_GCM,data:bOBQbrdQsq9J5XnAcGojvajImM+Golep,iv:mAZm5otXy3o3L2vqm8cLMjO5WX20prp2R0aJ4h3Hiug=,tag:FIq2hdHTAwZJo0v/h76dsg==,type:str]
                        password: ENC[AES256_GCM,data:fjwDGktRksPHlDI8IMXyyeUvYAKFhwxI,iv:cCCpUAG+eZdTjSiZGBS69Z+yTJB+F2Zc6tuIeAaPJt0=,tag:FYSzukhkFPGiKIcuLHe5kQ==,type:str]
        templates:
            - /etc/alertmanager/config/*.tmpl
prometheus:
    prometheusSpec:
        retention: 45d
        retentionSize: 25GB
        # By default, Prometheus only discovers PodMonitors and ServiceMonitors within its namespace.
        # Settings this to false disables the behaviour.
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        #containers:
        #  - name: prometheus
        #    startupProbe:
        #      failureThreshold: 500
        # Resources request and limits
        resources:
            requests:
                cpu: 500m
                memory: 2Gi
            limits:
                cpu: 1000m
                memory: 6Gi
        # PVC configuration
        storageSpec:
            volumeClaimTemplate:
                spec:
                    storageClassName: longhorn
                    accessModes:
                        - ReadWriteOnce
                    resources:
                        requests:
                            storage: 30Gi
# In K3S, these services are not deployed as pods but are part of the k3s binary
# Do not use the vip because there are node specific metrics
kubeEtcd:
    enabled: true
    endpoints:
        - 192.168.1.21
        - 192.168.1.22
        - 192.168.1.23
kubeControllerManager:
    enabled: true
    endpoints:
        - 192.168.1.21
        - 192.168.1.22
        - 192.168.1.23
    service:
        enabled: true
        port: 10257
        targetPort: 10257
    serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
kubeScheduler:
    enabled: true
    endpoints:
        - 192.168.1.21
        - 192.168.1.22
        - 192.168.1.23
    service:
        enabled: true
        port: 10259
        targetPort: 10259
    serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
kubeProxy:
    enabled: false
    endpoints:
        - 192.168.1.21
        - 192.168.1.22
        - 192.168.1.23
    service:
        enabled: true
        port: 10249
        targetPort: 10249
grafana:
    revisionHistoryLimit: 2
    assertNoLeakedSecrets: false
    deploymentStrategy:
        type: Recreate
    # Admin user password
    adminPassword: ENC[AES256_GCM,data:f87P1AVw7bhoGWkcQrsP4VYvyV5UcXhs5W8IHfCHA2Q=,iv:h2f0Oa4nEwSht4QFJeuT5DbeeLQYTJgKxBvg1VAaR2c=,tag:ul0Xvu1wW6AEYqmunwDKcg==,type:str]
    sidecar:
        dashboards:
            provider:
                allowUiUpdates: true
        resources:
            limits:
                cpu: 100m
                memory: 100Mi
            requests:
                cpu: 50m
                memory: 50Mi
    initChownData:
        resources:
            limits:
                cpu: 100m
                memory: 100Mi
            requests:
                cpu: 50m
                memory: 50Mi
    downloadDashboards:
        resources:
            limits:
                cpu: 100m
                memory: 100Mi
            requests:
                cpu: 50m
                memory: 50Mi
    persistence:
        enabled: true
        type: pvc
        existingClaim: longhorn-pvc-grafana
    # List of grafana plugins to be installed
    plugins:
        - grafana-piechart-panel
        #- "https://github.com/Checkmk/grafana-checkmk-datasource/releases/download/v3.3.0/tribe-29-checkmk-datasource-3.3.0.zip"
        - grafana-worldmap-panel
        - sni-thruk-datasource
    # ServiceMonitor label and job relabel
    #serviceMonitor:
    #  labels:
    #    release: kube-prometheus-stack
    #  relabelings:
    #    # Replace job value
    #    - sourceLabels:
    #        - __address__
    #      action: replace
    #      targetLabel: job
    #      replacement: grafana
    datasources:
        datasources.yaml:
            apiVersion: 1
            datasources:
                - name: Loki
                  type: loki
                  access: proxy
                  basicAuth: false
                  url: ENC[AES256_GCM,data:BHu2Cba+PkQHsLGegkedsimmzuXtHvWm5UthN3jmss69kg==,iv:sd2J7YAKEcVfpGhfm1lQ2TkycqI5/AifKglbLZ4CZz4=,tag:Gy54OGDSvwk3586x0elpNw==,type:str]
                  jsonData:
                    maxLines: 1000
    # Required for the dashboards configuration
    dashboardProviders:
        dashboardproviders.yaml:
            apiVersion: 1
            providers:
                - name: default
                  orgId: 1
                  folder: null
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
    dashboards:
        default:
            # https://grafana.com/grafana/dashboards/13639-logs-app/
            #logs-app:
            #  gnetId: 13639
            #  revison: 2
            #  datasource: Loki
            # https://grafana.com/grafana/dashboards/13332-kube-state-metrics-v2/
            #kube-state-metrics-v2:
            #  gnetId: 13332
            #  revison: 12
            #  datasource: Prometheus
            # https://grafana.com/grafana/dashboards/15757-kubernetes-views-global/
            kubernetes-views-global:
                gnetId: 15760
                revison: 32
                datasource: Prometheus
            # https://grafana.com/grafana/dashboards/15760-kubernetes-views-pods/
            kubernetes-views-pods:
                gnetId: 15757
                revison: 42
                datasource: Prometheus
            # https://grafana.com/grafana/dashboards/15759-kubernetes-views-nodes/
            kubernetes-views-nodes:
                gnetId: 15759
                revison: 32
                datasource: Prometheus
            # https://grafana.com/grafana/dashboards/15758-kubernetes-views-namespaces/
            kubernetes-views-namespaces:
                gnetId: 15758
                revison: 39
                datasource: Prometheus
                # https://grafana.com/grafana/dashboards/17882-kubernetes-event-exporter/
                #kubernetes-event-exporter:
                #  gnetId: 17882
                #  revison: 2
                #  datasource: null
                # https://grafana.com/grafana/dashboards/10176-pi-hole-exporter/
                #pihole-exporter:
                #  gnetId: 10176
                #  revison: 3
                #  datasource: Prometheus
    resources:
        requests:
            cpu: "1"
            memory: 1Gi
        limits:
            cpu: "4"
            memory: 2Gi
    grafana.ini:
        analytics:
            reporting_enabled: false
            check_for_updates: false
        auth:
            oauth_allow_insecure_email_lookup: true
            disable_login_form: true
        server:
            root_url: ENC[AES256_GCM,data:jwcy9evnnoeoa3O3hu6Lh1+wZ8Qoq/yf2/mhd04VIO6jSuuiCQ==,iv:5ep9luvCK3RF1RSbZerkqoi94GpHCd490Yd71J56Abc=,tag:YOYjg0CZpOz3h26qqDtwCA==,type:str]
        auth.generic_oauth:
            enabled: true
            name: Authelia
            icon: signin
            client_id: grafana
            client_secret: ENC[AES256_GCM,data:7je2Cc1qWsCnvSc7/5XUQYhWegYjp1Zly8IvUDXYLps=,iv:1PuOqhj/OaLaOPZTP2qxA4CsV81jS9tCUxHMm1csI+8=,tag:jOnxLZJLC1OTndmdn12CkQ==,type:str]
            scopes: openid profile email groups
            empty_scopes: false
            auth_url: ENC[AES256_GCM,data:7uzh/gXEgRlegPLyM/6vJp9GdGcMfzytra6IPgBCk6+KS0YoS15GIY+whtrTTwHfPI4kGg==,iv:ACd1NcUVlNhuHdxfBJvW0F/hQZe7uNTNCfNVak6oWDE=,tag:7P9u37FnELxmWFZ0EHpprw==,type:str]
            token_url: http://authelia.authelia.svc.cluster.local/api/oidc/token
            api_url: ENC[AES256_GCM,data:nFwevwezF/xOgmmBeYMYkuM0YraRCGeErZHhUjScG4ouCKlp1islsMxihpo7tdA=,iv:LbADCRIuv21Nw4Na/jrGV27OlUVLDJV5hzZgIqIvKmM=,tag:Hz/VowsQo7NbXdiD5OjeSg==,type:str]
            login_attribute_path: preferred_username
            groups_attribute_path: groups
            role_attribute_path: contains(groups[*], 'GrafanaAdmin') && 'GrafanaAdmin' || contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'editor') && 'Editor' || contains(groups[*], 'viewer') && 'Viewer'
            role_attribute_strict: true
            name_attribute_path: name
            use_pkce: true
            tls_skip_verify_insecure: true
            allow_assign_grafana_admin: true
        auth.proxy:
            enabled: false
            header_name: Remote-User
            header_property: username
            auto_sign_up: true
            headers: Groups:Remote-Group
            enable_login_token: false
prometheus-node-exporter:
    resources:
        limits:
            cpu: 200m
            memory: 50Mi
        requests:
            cpu: 100m
            memory: 30Mi
sops:
    age:
        - recipient: age1d2g7tgqpfvxulsusn3m608h60h2hne7yqwv5nh5nd24z6h0hgq0skjkhw8
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSB1aHp1TVlHdTBRVTdIVEhz
            dHJIVDhybWtWLzh3M3QwbEtZOGw1WFZTZTFVClk3Y1JiNWFDdmlwaW5kMGp6M0R3
            SGo4eitpeWNpZm10Rzlud1ZjL0VmUVkKLS0tIGl2eHd1WWNsbXdPRFA5LzcvZUN2
            ejZUY1VQQWlqK3RHT2RlNEtHUkRCeUEK/BoWbHtBeSvx5mk9UrokI6EvBf/hPSCn
            c5oB0kvlo4LtvUbp4Paueu+Rm/kII402Aick8Z8JZAveblkc4R5Lqw==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1q522xtgjrmvr43w7um5rh02ta3yfns635680hz4m7uhw0nfqj5zqgxnz27
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBnVEluQ09WczFRZzJoTlEx
            NFBQaUM0bHBJajJjVFFVb1R1SzNiT09yeG5vCkw1czNKdEx5eDNhN3JUeVRxSzFQ
            eC9DbGFPKzZJTUNabVZJbTdTOENBcncKLS0tIHlUWElVTFBtcCtpQzdpd3ZLb09I
            b21ocjJqcXhLVVNkbExDclpDdnhYdk0KbalfIDvgAzOiIc1xEv/xHM3ijF8/NNW6
            L9jVYtLS55rkjY47RJpUn81FPLNLd17Q2Wji6P185b1y5NobDHL0Eg==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-10-13T19:43:03Z"
    mac: ENC[AES256_GCM,data:u2j2ih8fTwVi/S1pDFwLuuDurAMqCPEJw4wjaoQBeMAqu8MZS1HQGsJikFP6Z+IDrdPyWWsAaW+kUMxpQTdLhm4LilP3i+Rqs3eyof/gEUQaCxZh84F8jBYihEodePdvFftYue8RCBsHx804ToknQuaITL75VOTshOl4vasR6DM=,iv:nILxxrELZ7xhc5frGe5wM/aSek9KELSQl4br1rZi6KY=,tag:tIzAsAGOOrjZDNCVSL2Lgw==,type:str]
    encrypted_regex: ^(data|stringData|email|dnsNames|.*(H|h)osts?|hostname|username|password|url|issuer|argocdServerAdminPassword|oidc.config|commonName|literals|.*awsAccessKeyId|.*awsSecretAccessKey|.*defaultAdminPassword|apiToken|accountId|rootPassword|replicationPassword|adminPassword|root_url|client_secret|auth_url|api_url|PIHOLE_DOMAIN|TUNNEL_DNS_UPSTREAM|customDnsEntries|securityTokenKey|emailRecipients|.*provider_url|.*redirect_url|.*accesskeyEncryption|SEMAPHORE_WEB_ROOT|token|cookieEncryption|cookieHash)$
    version: 3.11.0
