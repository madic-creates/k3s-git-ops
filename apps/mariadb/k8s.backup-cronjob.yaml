## Service Account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-backup-serviceaccount
  namespace: databases
## Role with permissions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: databases
  name: mariadb-backup-role
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "list", "create"]
## Bind role and service account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mariadb-backup-rolebinding
  namespace: databases
subjects:
  - kind: ServiceAccount
    name: mariadb-backup-serviceaccount
    namespace: databases
roleRef:
  kind: Role
  name: mariadb-backup-role
  apiGroup: rbac.authorization.k8s.io
## CronJob
### Backup is done this way because for best compatibility mariadb-backup must be the same version as the server
### Alternatively I could use the mariadb container image, but need to remember to update it as well when updating the container
### This way I always get the correct mariadb-backup version by just using mariadb-backup within the mariadb container
###
### The processes need to run sequential and not parallel. Therefor mariadb-backup runs as an initContainer and restic as a normal container
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mariadb-backup
  namespace: databases
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  schedule: "0 0-1,3-23 * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccountName: mariadb-backup-serviceaccount
          initContainers:
            - name: kubectl-mariadb-backup
              image: bitnami/kubectl:latest
              command:
                - /bin/sh
                - -c
                - |
                  POD_NAME=$(kubectl get pods -n databases -l app.kubernetes.io/name=mariadb -o jsonpath="{.items[0].metadata.name}")
                  kubectl exec -n databases $POD_NAME -- bash -c "mariadb-backup --host 127.0.0.1 --user=root --password=\$MARIADB_ROOT_PASSWORD --backup --target-dir=/backup --stream=xbstream > /backup/mariadb.xb"
          containers:
            - name: restic
              image: ghcr.io/restic/restic:0.18.0
              envFrom:
                - secretRef:
                    name: backup-env-configuration-mariadb
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - /usr/local/bin/backup.sh
              volumeMounts:
                - name: backup-script
                  mountPath: /usr/local/bin/backup.sh
                  subPath: backup.sh
                - name: backup
                  mountPath: /backup
                  readOnly: true
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
          restartPolicy: Never
          volumes:
            - name: backup
              persistentVolumeClaim:
                claimName: longhorn-pvc-mariadb-backupvolume
            - name: backup-script
              configMap:
                name: crontab-backup-script
